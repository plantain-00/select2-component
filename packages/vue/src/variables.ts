// @ts-nocheck
/**
 * This file is generated by 'file2variable-cli'
 * It is not mean to be edited by hand
 */
import { createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, Fragment as _Fragment, normalizeClass as _normalizeClass, openBlock as _openBlock, renderList as _renderList, resolveDynamicComponent as _resolveDynamicComponent, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives } from 'vue'
// tslint:disable
/* eslint-disable */

export function autoCompleteTemplateHtml(_ctx, _cache) {
  return (_openBlock(), _createElementBlock("div", {
    class: _normalizeClass(_ctx.containerStyle)
  }, [
    _createElementVNode("div", { class: "selection" }, [
      _createElementVNode("div", { class: "select2-search select2-search--dropdown" }, [
        _createElementVNode("input", {
          ref: "searchInput",
          value: _ctx.value,
          onInput: _cache[0] || (_cache[0] = $event => (_ctx.onChange($event))),
          onKeydown: _cache[1] || (_cache[1] = $event => (_ctx.keyDown($event))),
          onKeyup: _cache[2] || (_cache[2] = $event => (_ctx.keyUp($event))),
          onKeypress: _cache[3] || (_cache[3] = $event => (_ctx.keyPress($event))),
          onFocusout: _cache[4] || (_cache[4] = $event => (_ctx.focusout())),
          onClick: _cache[5] || (_cache[5] = $event => (_ctx.toggleOpenAndClose())),
          class: "select2-search__field",
          type: "search",
          role: "textbox",
          autocomplete: "off",
          autocorrect: "off",
          autocapitalize: "off",
          spellcheck: "false"
        }, null, 40 /* PROPS, HYDRATE_EVENTS */, ["value"])
      ])
    ]),
    _createElementVNode("div", {
      class: _normalizeClass(_ctx.dropdownStyle)
    }, [
      _createElementVNode("div", { class: "select2-dropdown" }, [
        _createElementVNode("div", { class: "select2-results" }, [
          _createElementVNode("ul", {
            ref: "results",
            class: "select2-results__options",
            role: "tree",
            tabindex: "-1",
            onKeydown: _cache[6] || (_cache[6] = $event => (_ctx.keyDown($event))),
            onFocusout: _cache[7] || (_cache[7] = $event => (_ctx.focusout()))
          }, [
            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.filteredData, (groupOrOption, i) => {
              return (_openBlock(), _createElementBlock(_Fragment, null, [
                (groupOrOption.options)
                  ? (_openBlock(), _createElementBlock("li", {
                      key: 0,
                      class: "select2-results__option",
                      role: "group"
                    }, [
                      _createElementVNode("strong", { class: "select2-results__group" }, _toDisplayString(groupOrOption.label), 1 /* TEXT */),
                      _createElementVNode("ul", { class: "select2-results__options select2-results__options--nested" }, [
                        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(groupOrOption.options, (option, j) => {
                          return (_openBlock(), _createElementBlock("li", {
                            key: j,
                            class: _normalizeClass(_ctx.getOptionStyle(option)),
                            role: "treeitem",
                            "aria-selected": _ctx.isSelected(option),
                            "aria-disabled": _ctx.isDisabled(option),
                            onMouseenter: $event => (_ctx.mouseenter(option)),
                            onClick: $event => (_ctx.click(option))
                          }, [
                            (option.component)
                              ? (_openBlock(), _createBlock(_resolveDynamicComponent(option.component), {
                                  key: 0,
                                  option: option
                                }, null, 8 /* PROPS */, ["option"]))
                              : (_openBlock(), _createElementBlock(_Fragment, { key: 1 }, [
                                  _createTextVNode(_toDisplayString(option.label), 1 /* TEXT */)
                                ], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */))
                          ], 42 /* CLASS, PROPS, HYDRATE_EVENTS */, ["aria-selected", "aria-disabled", "onMouseenter", "onClick"]))
                        }), 128 /* KEYED_FRAGMENT */))
                      ])
                    ]))
                  : (_openBlock(), _createElementBlock("li", {
                      key: 1,
                      class: _normalizeClass(_ctx.getOptionStyle(groupOrOption)),
                      role: "treeitem",
                      "aria-selected": _ctx.isSelected(groupOrOption),
                      "aria-disabled": _ctx.isDisabled(groupOrOption),
                      onMouseenter: $event => (_ctx.mouseenter(groupOrOption)),
                      onClick: $event => (_ctx.click(groupOrOption))
                    }, [
                      (groupOrOption.component)
                        ? (_openBlock(), _createBlock(_resolveDynamicComponent(groupOrOption.component), {
                            key: 0,
                            option: groupOrOption
                          }, null, 8 /* PROPS */, ["option"]))
                        : (_openBlock(), _createElementBlock(_Fragment, { key: 1 }, [
                            _createTextVNode(_toDisplayString(groupOrOption.label), 1 /* TEXT */)
                          ], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */))
                    ], 42 /* CLASS, PROPS, HYDRATE_EVENTS */, ["aria-selected", "aria-disabled", "onMouseenter", "onClick"]))
              ], 64 /* STABLE_FRAGMENT */))
            }), 256 /* UNKEYED_FRAGMENT */))
          ], 544 /* HYDRATE_EVENTS, NEED_PATCH */)
        ])
      ])
    ], 2 /* CLASS */)
  ], 2 /* CLASS */))
}
export function select2TemplateHtml(_ctx, _cache) {
  return (_openBlock(), _createElementBlock("div", {
    class: _normalizeClass(_ctx.containerStyle)
  }, [
    _createElementVNode("div", {
      class: "selection",
      onClick: _cache[0] || (_cache[0] = $event => (_ctx.toggleOpenAndClose()))
    }, [
      _createElementVNode("div", {
        class: _normalizeClass(_ctx.selectionStyle),
        role: "combobox"
      }, [
        (!_ctx.multiple)
          ? (_openBlock(), _createElementBlock("span", {
              key: 0,
              class: "select2-selection__rendered",
              title: _ctx.option ? _ctx.option.label : ''
            }, [
              (_ctx.option)
                ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [
                    (_ctx.option.component)
                      ? (_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.option.component), {
                          key: 0,
                          option: _ctx.option
                        }, null, 8 /* PROPS */, ["option"]))
                      : (_openBlock(), _createElementBlock(_Fragment, { key: 1 }, [
                          _createTextVNode(_toDisplayString(_ctx.option.label), 1 /* TEXT */)
                        ], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */))
                  ], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */))
                : (_openBlock(), _createElementBlock("span", {
                    key: 1,
                    class: "select2-selection__placeholder"
                  }, _toDisplayString(_ctx.placeholder), 1 /* TEXT */))
            ], 8 /* PROPS */, ["title"]))
          : _createCommentVNode("v-if", true),
        (!_ctx.multiple)
          ? (_openBlock(), _createElementBlock("span", {
              key: 1,
              class: "select2-selection__arrow",
              role: "presentation"
            }, [
              _createElementVNode("b", { role: "presentation" })
            ]))
          : _createCommentVNode("v-if", true),
        (_ctx.multiple)
          ? (_openBlock(), _createElementBlock("ul", {
              key: 2,
              class: "select2-selection__rendered"
            }, [
              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.option, (op, i) => {
                return (_openBlock(), _createElementBlock("li", {
                  key: i,
                  class: "select2-selection__choice",
                  title: op.label
                }, [
                  _createElementVNode("span", {
                    onClick: $event => (_ctx.removeSelection($event, op)),
                    class: "select2-selection__choice__remove",
                    role: "presentation"
                  }, "Ã—", 8 /* PROPS */, ["onClick"]),
                  _createTextVNode(" " + _toDisplayString(op.label), 1 /* TEXT */)
                ], 8 /* PROPS */, ["title"]))
              }), 128 /* KEYED_FRAGMENT */))
            ]))
          : _createCommentVNode("v-if", true)
      ], 2 /* CLASS */)
    ]),
    _createElementVNode("div", {
      class: _normalizeClass(_ctx.dropdownStyle)
    }, [
      _createElementVNode("div", { class: "select2-dropdown select2-dropdown--below" }, [
        _createElementVNode("div", {
          class: _normalizeClass(_ctx.searchStyle)
        }, [
          _withDirectives(_createElementVNode("input", {
            ref: "searchInput",
            "onUpdate:modelValue": _cache[1] || (_cache[1] = $event => (_ctx.searchText = $event)),
            onKeydown: _cache[2] || (_cache[2] = $event => (_ctx.keyDown($event))),
            onKeyup: _cache[3] || (_cache[3] = $event => (_ctx.keyUp($event))),
            onKeypress: _cache[4] || (_cache[4] = $event => (_ctx.keyPress($event))),
            onFocus: _cache[5] || (_cache[5] = $event => (_ctx.cancelFocusoutTimer())),
            onFocusout: _cache[6] || (_cache[6] = $event => (_ctx.focusout())),
            class: "select2-search__field",
            type: "search",
            role: "textbox",
            autocomplete: "off",
            autocorrect: "off",
            autocapitalize: "off",
            maxlength: _ctx.maximumInputLength,
            spellcheck: "false"
          }, null, 40 /* PROPS, HYDRATE_EVENTS */, ["maxlength"]), [
            [_vModelText, _ctx.searchText]
          ])
        ], 2 /* CLASS */),
        _createElementVNode("div", { class: "select2-results" }, [
          _createElementVNode("ul", {
            ref: "results",
            class: "select2-results__options",
            role: "tree",
            tabindex: "-1",
            onKeydown: _cache[7] || (_cache[7] = $event => (_ctx.keyDown($event))),
            onFocus: _cache[8] || (_cache[8] = $event => (_ctx.cancelFocusoutTimer())),
            onFocusout: _cache[9] || (_cache[9] = $event => (_ctx.focusout()))
          }, [
            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.filteredData, (groupOrOption, i) => {
              return (_openBlock(), _createElementBlock(_Fragment, null, [
                (groupOrOption.options)
                  ? (_openBlock(), _createElementBlock("li", {
                      key: 0,
                      class: "select2-results__option",
                      role: "group"
                    }, [
                      _createElementVNode("strong", { class: "select2-results__group" }, _toDisplayString(groupOrOption.label), 1 /* TEXT */),
                      _createElementVNode("ul", { class: "select2-results__options select2-results__options--nested" }, [
                        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(groupOrOption.options, (option, j) => {
                          return (_openBlock(), _createElementBlock("li", {
                            key: j,
                            class: _normalizeClass(_ctx.getOptionStyle(option)),
                            role: "treeitem",
                            "aria-selected": _ctx.isSelected(option),
                            "aria-disabled": _ctx.isDisabled(option),
                            onMouseenter: $event => (_ctx.mouseenter(option)),
                            onClick: $event => (_ctx.click(option))
                          }, [
                            (option.component)
                              ? (_openBlock(), _createBlock(_resolveDynamicComponent(option.component), {
                                  key: 0,
                                  option: option
                                }, null, 8 /* PROPS */, ["option"]))
                              : (_openBlock(), _createElementBlock(_Fragment, { key: 1 }, [
                                  _createTextVNode(_toDisplayString(option.label), 1 /* TEXT */)
                                ], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */))
                          ], 42 /* CLASS, PROPS, HYDRATE_EVENTS */, ["aria-selected", "aria-disabled", "onMouseenter", "onClick"]))
                        }), 128 /* KEYED_FRAGMENT */))
                      ])
                    ]))
                  : (_openBlock(), _createElementBlock("li", {
                      key: 1,
                      class: _normalizeClass(_ctx.getOptionStyle(groupOrOption)),
                      role: "treeitem",
                      "aria-selected": _ctx.isSelected(groupOrOption),
                      "aria-disabled": _ctx.isDisabled(groupOrOption),
                      onMouseenter: $event => (_ctx.mouseenter(groupOrOption)),
                      onClick: $event => (_ctx.click(groupOrOption))
                    }, [
                      (groupOrOption.component)
                        ? (_openBlock(), _createBlock(_resolveDynamicComponent(groupOrOption.component), {
                            key: 0,
                            option: groupOrOption
                          }, null, 8 /* PROPS */, ["option"]))
                        : (_openBlock(), _createElementBlock(_Fragment, { key: 1 }, [
                            _createTextVNode(_toDisplayString(groupOrOption.label), 1 /* TEXT */)
                          ], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */))
                    ], 42 /* CLASS, PROPS, HYDRATE_EVENTS */, ["aria-selected", "aria-disabled", "onMouseenter", "onClick"]))
              ], 64 /* STABLE_FRAGMENT */))
            }), 256 /* UNKEYED_FRAGMENT */))
          ], 544 /* HYDRATE_EVENTS, NEED_PATCH */)
        ])
      ])
    ], 2 /* CLASS */)
  ], 2 /* CLASS */))
}
/* eslint-enable */
// tslint:enable
